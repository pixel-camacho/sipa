import { Promise } from 'rsvp';
import { Dict } from './core';
import HandlerInfo, { Continuation, IHandler } from './handler-info';
import { Transition } from './transition';
interface IParams {
    [key: string]: unknown;
}
export default class TransitionState {
    handlerInfos: HandlerInfo[];
    queryParams: Dict<unknown>;
    params: IParams;
    promiseLabel(label: string): string;
    resolve(shouldContinue: Continuation, transition: Transition): Promise<TransitionState>;
}
export declare class TransitionError {
    error: Error;
    handler: IHandler;
    wasAborted: boolean;
    state: TransitionState;
    constructor(error: Error, handler: IHandler, wasAborted: boolean, state: TransitionState);
}
export {};
